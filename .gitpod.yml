# Contenido final y perfeccionado para: .gitpod.yml

tasks:
  - name: Entorno Sui
    init: |
      echo "--- Automatización de Entorno Profesional Iniciada ---"

      echo "-> Instalando Rust y Cargo..."
      curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
      
      # Hacemos 'source' aquí para que los siguientes comandos puedan usar 'cargo'.
      source "$HOME/.cargo/env"
      
      # ¡IMPORTANTE! Usamos la versión 1.51.0 para que coincida con la devnet.
      echo "-> Instalando Sui CLI v1.51.0 desde binarios..."
      wget -O sui.tgz https://github.com/MystenLabs/sui/releases/download/testnet-v1.51.0/sui-testnet-v1.51.0-ubuntu-x86_64.tgz
      tar -xzf sui.tgz
      mv sui-testnet-v1.51.0-ubuntu-x86_64/sui ~/.cargo/bin/
      rm sui.tgz
      rm -rf sui-testnet-v1.51.0-ubuntu-x86_64

      echo "-> Configurando cliente de Sui para devnet..."
      # Automatizamos la creación del entorno devnet.
      sui client new-env --alias devnet --rpc https://fullnode.devnet.sui.io:443
      
      echo "-> Instalando dependencias del cliente TypeScript..."
      cd app_client_logic
      npm install
      cd ..

      echo "--- Instalación de herramientas base completada. ---"
    command: |
      source "$HOME/.cargo/env"
      echo "--- Verificando instalaciones... ---"
      sui --version
      cargo --version
      echo ""
      echo "✅ ¡Entorno 100% listo y automatizado! Bienvenido de vuelta."

# Las otras terminales se quedan igual para nuestro flujo de trabajo.
  - name: Cliente (TypeScript)
    command: |
      echo "✅ Terminal del Cliente lista."
      cd app_client_logic

  - name: General / Git
    command: |
      echo "✅ Terminal General lista para comandos de Git."

vscode:
  extensions:
    - rust-lang.rust-analyzer@prerelease
    - esbenp.prettier-vscode

ports:
  - port: 5173
    onOpen: open-preview